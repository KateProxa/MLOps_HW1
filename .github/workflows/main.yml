name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/kateproxa/mlops_hw1:${{ github.sha }} .
          docker push ghcr.io/kateproxa/mlops_hw1:${{ github.sha }}
          docker tag ghcr.io/kateproxa/mlops_hw1:${{ github.sha }} ghcr.io/kateproxa/mlops_hw1:latest
          docker push ghcr.io/kateproxa/mlops_hw1:latest

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install black

      - name: Format code
        run: black .

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install flake8

      - name: Lint code
        run: flake8 .

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull and run Docker container
        run: |
          docker pull ghcr.io/kateproxa/mlops_hw1:${{ github.sha }}
          docker run -d -p 80:80 ghcr.io/kateproxa/mlops_hw1:${{ github.sha }}

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Quarto
        run: |
          curl -LO https://quarto.org/download/latest/quarto-linux-amd64.deb
          sudo apt-get install -y gdebi-core
          sudo gdebi -n quarto-linux-amd64.deb

      - name: Render documentation
        run: quarto render EDA.ipynb --to html
        
      - name: Move documentation to public directory for GitHub Pages (если необходимо)
        run: |
          mkdir -p public && mv EDA.html public/
